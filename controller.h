#include <iostream>
#include <string>
#include "view.h"
#include "difficulty_enum.h"
#include "mode_enum.h"
#include "wordsgame.h"
#include "wordsClassic.h"

using namespace std;

class Controller {
private:
    View view;
    Mode mode;
    Difficulty difficulty;
    Account account;
public:

    void run() {
        view.accountInteraction(account);
        while(true){
            account.getData(account.getName());
            view.menuInteraction(account);
            startGame();
        }
    }


    void startGame() {
        while (true) {
            cout << "\n–í–∏–±–µ—Ä—ñ—Ç—å —Ä–µ–∂–∏–º (classic/hidden/proverb/sentence/hangman)" << endl;
            cout << "Classic - –∫–ª–∞—Å–∏—á–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç –≥—Ä–∏ –≤ \"–°–ª–æ–≤–∞\"" << endl;
            cout << "Hidden - —Ä–µ–∂–∏–º, –¥–µ —á–∞—Å—Ç–∏–Ω–∞ –±—É–∫–≤ –∑–∞–º—ñ–Ω–µ–Ω—ñ –Ω–∞ '*'. –¶–µ–π —Ä–µ–∂–∏–º –ø—ñ–¥—Ö–æ–¥–∏—Ç—å —Ç–∏–º, —Ö—Ç–æ –≤–∂–µ —Ç—Ä–æ—Ö–∏ –ø–æ–≥—Ä–∞–≤ —É –∫–ª–∞—Å–∏—á–Ω–∏–π —Ä–µ–∂–∏–º" << endl;
            cout << "Proverb - —Ä–µ–∂–∏–º –¥–ª—è —Ç–∏—Ö, —Ö—Ç–æ –≤–≤–∞–∂–∞—î, —â–æ –≤—ñ–Ω –¥–æ–±—Ä–µ –∑–Ω–∞—î –ø—Ä–∏—Å–ª—ñ–≤'—è —ñ –ø—Ä–∏–∫–∞–∑–∫–∏." << endl;
            cout << "Sentence - —Ä–µ–∂–∏–º –¥–ª—è —Ç–∏—Ö, –∫–æ–º—É –≥—Ä–∞ –∑ –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º –∑–¥–∞—î—Ç—å—Å—è –Ω—É–¥–Ω–æ—é. –í—ñ–¥–≥–∞–¥—É–π—Ç–µ –æ–¥—Ä–∞–∑—É –¥–µ–∫—ñ–ª—å–∫–∞ —Å–ª—ñ–≤." << endl;
            cout << "Hangman - —Å—Ç–∞—Ä–∞ –∫–ª–∞—Å–∏—á–Ω–∞ –≥—Ä–∞, –¥–µ –≤–∏ –≤–≥–∞–¥—É—î—Ç–µ —è–∫—ñ –ª—ñ—Ç–µ—Ä–∏ —î –≤ —Å–ª–æ–≤—ñ —ñ –≤–≥–∞–¥—É—î—Ç–µ —Å–∞–º–µ —Å–ª–æ–≤–æ, –¥–æ–∫–∏ —à–∏–±–µ–Ω–∏—Ü—è –Ω–µ –±—É–¥–µ –¥–æ–º–∞–ª—å–æ–≤–∞–Ω–∞ –¥–æ –∫—ñ–Ω—Ü—è." << endl;
            cin >> mode;

            if (!cin.fail()) {
                break;
            } else {
                cin.clear();
                cout << "–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π —Ä–µ–∂–∏–º. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑." << endl;
            }
        }

        while (true) {
            cout << "\n–í–∏–±–µ—Ä—ñ—Ç—å —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—å (easy/medium/hard)" << endl;
            cout << "Easy - —Ü–µ —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—å, –¥–µ —É –≤–∞—Å —î –Ω–µ–æ–±–º–µ–∂–µ–Ω–∏–π —á–∞—Å. –ü—ñ–¥—Ö–æ–¥–∏—Ç—å –ø–æ—á–∞—Ç–∫—ñ–≤—Ü—è–º." << endl;
            cout << "Medium - —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—å, –¥–µ —É –≤–∞—Å –æ–±–º–µ–∂–µ–Ω–∏–π —á–∞—Å (–∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ —Ä–µ–∂–∏–º—É). –ë—ñ–ª—å—à–µ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è —Ç–∏—Ö, —Ö—Ç–æ –≤–∂–µ —Ç—Ä–æ—Ö–∏ –ø–æ–≥—Ä–∞–≤." << endl;
            cout << "Hard - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—å. –í –Ω–µ—ó –≤–∞–∂–∫–æ –±—É–¥–µ –≥—Ä–∞—Ç–∏ –Ω–∞–≤—ñ—Ç—å –¥–æ—Å–≤—ñ–¥—á–µ–Ω–∏–º –≥—Ä–∞–≤—Ü—è–º. –ß–∞—Å—É –¥—É–∂–µ –º–∞–ª–æ, –∞ —Å–ª—ñ–≤ –º–µ–Ω—à–µ –Ω–µ —Å—Ç–∞–ª–æ." << endl;
            cin >> difficulty;

            if (!cin.fail()) {
                break;
            } else {
                cin.clear();
                cout << "–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∞ —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—å. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑." << endl;
            }
        }
        cout << "–í–∏–±—Ä–∞–Ω–∏–π —Ä–µ–∂–∏–º: " << mode << endl;
        cout << "–í–∏–±—Ä–∞–Ω–∞ —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—å: " << difficulty << endl;

        if(mode == Classic){
            WordsClassic wordsClassic(account, mode, difficulty, "input.txt");
            wordsClassic.runWordsClassic();
        }

        /*API api;
        string words = api.apiRequest("–ú–∏ –≥—Ä–∞—î–º–æ –≤ —Å–ª–æ–≤–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é. –î–∞–π –º–µ–Ω—ñ —Ä–∞–Ω–¥–æ–º–Ω–∏—Ö 30 —ñ–º–µ–Ω–Ω–∏–∫—ñ–≤ —á–µ—Ä–µ–∑ –ø—Ä–æ–±—ñ–ª, –±–µ–∑ –∫–æ–º–∏, –Ω—ñ—á–æ–≥–æ –∫—Ä—ñ–º —Ü—å–æ–≥–æ –Ω–µ –ø–∏—à–∏. –°–ª–æ–≤–∞ –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –Ω–µ –±—ñ–ª—å—à–µ –∑–∞ 10 —Å–∏–º–≤–æ–ª—ñ–≤. –£–Ω–∏–∫–∞–π –ø–æ–≤—Ç–æ—Ä–µ–Ω—å. –ö–æ–∂–Ω–µ —Å–ª–æ–≤–æ –ø–æ–≤–∏–Ω–Ω–æ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—å –∑ –≤–µ–ª–∏–∫–æ—ó –ª—ñ—Ç–µ—Ä–∏");
        ofstream fout("input.txt");
        fout << words << endl;
        wordsGame.runGame();
        string currentWord = wordsGame.getWord();
        int attempts = wordsGame.getAttempts();
        string hint = "-";
        again:
        int credits = view.getAccountCredits();
        view.printCurrentAttemptTable(wordsGame.getShuffledWord(), attempts, hint, credits);

        string inputword;
        cout << "–í–≤–µ–¥–∏ —Å–ª–æ–≤–æ, –∞–±–æ \"–ø—ñ–¥–∫–∞–∑–∫–∞\": ";
        getline(cin, inputword, ' ');
        if (inputword == "–ø—ñ–¥–∫–∞–∑–∫–∞") {
            if (credits >= 25) {
                hint = api.apiRequest("–ú–∏ –≥—Ä–∞—î–º–æ –≤ —Å–ª–æ–≤–∞. –ó—Ä–æ–±–∏ –ø—ñ–¥–∫–∞–∑–∫—É —É–∫—Ä–∞—ó–Ω—Å—å–∫—É—é –º–æ–≤–æ—é –¥–æ 40 —Å–∏–º–≤–æ–ª—ñ–≤ –¥–æ —Å–ª–æ–≤–∞ " + currentWord);
                view.setAccountCredits(credits-25);
            }
            else {
                cout << "‚ö†\uFE0F‚ö†\uFE0F‚ö†\uFE0F–ù–∞ –∂–∞–ª—å, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫—Ä–µ–¥–∏—Ç—ñ–≤. –ö—É–ø–∏—Ç–∏ —ó—Ö –º–æ–∂–Ω–∞, –∑–∞–¥–æ–Ω–∞—Ç–∏–≤—à–∏ –Ω–∞ –∫–∞—Ä—Ç—É 5355571113731129. –ü—ñ—Å–ª—è –¥–æ–Ω–∞—Ç—É –ø–∏—à–µ—Ç–µ –≤ –¢–ì –∑–∞ –Ω–æ–º–µ—Ä–æ–º 0508641813, –∫–∏–¥–∞—î—Ç–µ —Å–∫—Ä—ñ–Ω –æ–ø–ª–∞—Ç–∏. 100 –∫—Ä–µ–¥–∏—Ç—ñ–≤ = 100–≥—Ä–Ω. –ü—ñ—Å–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –æ–ø–ª–∞—Ç–∏ –∫—Ä–µ–¥–∏—Ç–∏ –±—É–¥—É—Ç—å –¥–æ–¥–∞–Ω—ñ –Ω–∞ –∞–∫–∞—É–Ω—Ç. –ö–æ–ª–∏—Å—å.üòòüòòüòòüòÜüòÜüòÜ:-):-)^_^(‚î¨‚î¨Ôπè‚î¨‚î¨)(‚î¨‚î¨Ôπè‚î¨‚î¨)(‚î¨‚î¨Ôπè‚î¨‚î¨)(‚ïØ¬∞‚ñ°¬∞Ôºâ‚ïØÔ∏µ ‚îª‚îÅ‚îª(‚ïØ¬∞‚ñ°¬∞Ôºâ‚ïØÔ∏µ ‚îª‚îÅ‚îª(‚ïØ¬∞‚ñ°¬∞Ôºâ‚ïØÔ∏µ ‚îª‚îÅ‚îª‚ö†\uFE0F‚ö†\uFE0F‚ö†\uFE0F" << endl;
            }
            goto again;
        }
        if (inputword == currentWord) {
            cout << "–í–∏ –≤–≥–∞–¥–∞–ª–∏!!!!" << endl;
            if(difficulty == Easy){
                view.setAccountCredits(credits+5);
            }else if(difficulty == Medium){
                view.setAccountCredits(credits+15);
            }else view.setAccountCredits(credits+25);

        } else {
            if (attempts == 1) {
                cout << "–í–∏ –ø—Ä–æ–≥—Ä–∞–ª–∏! –õ–æ—à–∞—Ä–∞" << endl;
            }
            else {
                cout << "–í–∏ –Ω–µ –≤–≥–∞–¥–∞–ª–∏. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑." << endl;
                attempts--;
                goto again;
            }
        }*/
    }
};